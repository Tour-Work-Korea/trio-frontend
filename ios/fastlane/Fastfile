default_platform(:ios)

platform :ios do
  desc "빌드 전에 인증서/프로파일 받아오고 IPA 생성"

  before_all do

      #현재 디렉토리 출력
      puts "현재 디렉토리 : #{Dir.pwd}"

      # ✅ .env.production 수동 로딩
      File.foreach("ios/.env.production") do |line|
        key, value = line.strip.split('=', 2)
        ENV[key] = value if key && value
      end

      # ① CI 전용 키체인 만들기 (unlock, default 설정)
      create_keychain(
        name:              "ci-build.keychain",
        password:          ENV["CI_KEYCHAIN_PASSWORD"],
        default_keychain:  true,
        unlock:            true,
        timeout:           3600,  # 초 단위
        lock_when_sleeps:  false
      )
      # ② 인증서 복사: 기본 로그인 키체인에서 가져오지 않고, 이 키체인에만 설치
      ENV["MATCH_KEYCHAIN_NAME"]     = "ci-build.keychain"
      ENV["MATCH_KEYCHAIN_PASSWORD"] = ENV["CI_KEYCHAIN_PASSWORD"]
    end

  lane :build_ipa do

    # 날짜 기반 빌드 넘버
    build_number = Time.now.strftime("%Y%m%d%H%M")
    increment_build_number(build_number: build_number)

    # ① match 로 App Store 프로비전 가져오기
    match(
        type:       "development",
        readonly:   ENV["CI"] == "true",
        git_url:    ENV["MATCH_GIT_URL"],
        username:   ENV["APPLE_ID"],
        team_id:    ENV["TEAM_ID"],
        keychain_name:    ENV["MATCH_KEYCHAIN_NAME"],
        keychain_password: ENV["KEYCHAIN_PASSWORD"]
      )

      # ② 배포용 프로파일
      match(
        type:       "appstore",
        readonly:   ENV["CI"] == "true",
        git_url:    ENV["MATCH_GIT_URL"],
        username:   ENV["APPLE_ID"],
        team_id:    ENV["TEAM_ID"],
        keychain_name:    ENV["MATCH_KEYCHAIN_NAME"],
        keychain_password: ENV["KEYCHAIN_PASSWORD"]
      )

    # ② JS 번들링
    sh <<-SHELL
      cd ..
      yarn react-native bundle \
        --platform ios \
        --dev false \
        --entry-file index.js \
        --bundle-output ios/trioFrontendApp/main.jsbundle \
        --assets-dest ios/trioFrontendApp
    SHELL



    # ③ 빌드 & export
    build_app(
      workspace:       "trioFrontendApp.xcworkspace",
      scheme:          "trioFrontendApp",
      configuration:   "Release",
      clean:           true,
      export_method:   "app-store",
      # CI 에서 프로파일 자동 갱신 허용
      xcargs: "-allowProvisioningUpdates",
      export_xcargs: "-allowProvisioningUpdates",

      output_directory: "../output",
      output_name:      "trioFrontendApp.ipa"
    )
  end

  desc "TestFlight 업로드"
  lane :upload_ipa do
    api_key = app_store_connect_api_key(
      key_id:     ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id:  ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_PRIVATE_KEY"],
      duration:   1200,
      in_house:   false
    )
    upload_to_testflight(
      api_key: api_key,
      ipa:      "../output/trioFrontendApp.ipa",
      skip_waiting_for_build_processing: true
    )
  end
end
